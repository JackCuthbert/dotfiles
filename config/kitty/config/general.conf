# vim:fileencoding=utf-8:ft=conf

# You can include secondary config files via the "include" directive.
# If you use a relative path for include, it is resolved with respect to the
# location od the current config file. For example:
# include other.conf

# Cursor customization {{{
# The cursor shape can be one of (block, beam, underline)
# cursor_shape     block

# The interval (in seconds) at which to blink the cursor. Set to zero to
# disable blinking. Note that numbers smaller than repaint_delay will be
# limited to repaint_delay.
# cursor_blink_interval     0.5

# Stop blinking cursor after the specified number of seconds of keyboard inactivity. Set to
# zero to never stop blinking.
# cursor_stop_blinking_after 15.0
# }}}


# Scrollback {{{
# Number of lines of history to keep in memory for scrolling back
# scrollback_lines 2000

# Program with which to view scrollback in a new window. The scrollback buffer is passed as
# STDIN to this program. If you change it, make sure the program you use can
# handle ANSI escape sequences for colors and text formatting.
# scrollback_pager less +G -R

# Wheel scroll multiplier (modify the amount scrolled by the mouse wheel). Use negative
# numbers to change scroll direction.
# wheel_scroll_multiplier 5.0
# }}}


# Performance tuning {{{
# Delay (in milliseconds) between screen updates. Decreasing it, increases
# frames-per-second (FPS) at the cost of more CPU usage. The default value
# yields ~100 FPS which is more than sufficient for most uses. Note that to
# actually achieve 100FPS you have to either set sync_to_monitor to no or use a
# monitor with a high refresh rate.
# repaint_delay    10

# Delay (in milliseconds) before input from the program running in the terminal
# is processed. Note that decreasing it will increase responsiveness, but also
# increase CPU usage and might cause flicker in full screen programs that
# redraw the entire screen on each loop, because kitty is so fast that partial
# screen updates will be drawn.
# input_delay 3

# Sync screen updates to the refresh rate of the monitor. This prevents
# tearing (https://en.wikipedia.org/wiki/Screen_tearing) when scrolling. However,
# it limits the rendering speed to the refresh rate of your monitor. With a
# very high speed mouse/high keyboard repeat rate, you may notice some slight input latency.
# If so, set this to no.
# sync_to_monitor yes
# }}}


# Audio/visual bell {{{
# Visual bell duration. Flash the screen when a bell occurs for the specified number of
# seconds. Set to zero to disable.
# visual_bell_duration 0.0

# Enable/disable the audio bell. Useful in environments that require silence.
# enable_audio_bell yes
# }}}


# Window layout {{{
# If enabled, the window size will be remembered so that new instances of kitty will have the same
# size as the previous instance. If disabled, the window will initially have size configured
# by initial_window_width/height, in pixels.
# remember_window_size   yes
# initial_window_width   640
# initial_window_height  400

# The enabled window layouts. A comma separated list of layout names. The special value * means
# all layouts. The first listed layout will be used as the startup layout.
# For a list of available layouts, see the README.
# enabled_layouts *

# The width (in pts) of window borders. Will be rounded to the nearest number of pixels based on screen resolution.
# Note that borders are displayed only when more than one window is visible. They are meant to separate multiple windows.
# window_border_width 1

# The window margin (in pts) (blank area outside the border)
# window_margin_width 0

# The window padding (in pts) (blank area between the text and the window border)
# window_padding_width 20

# The color for the border of the active window
# active_border_color #00ff00

# The color for the border of inactive windows
# inactive_border_color #cccccc

# Fade the text in inactive windows by the specified amount (a number between
# zero and one, with 0 being fully faded).
# inactive_text_alpha 1.0
# }}}


# Tab bar {{{
# Which edge to show the tab bar on, top or bottom
# tab_bar_edge bottom

# The separator between tabs in the tab bar
# tab_separator " â”‡"

# Tab bar colors and styles
# active_tab_foreground #000
# active_tab_background #eee
# active_tab_font_style bold-italic
# inactive_tab_foreground #444
# inactive_tab_background #999
# inactive_tab_font_style normal
# }}}

# The opacity of the background. A number between 0 and 1, where 1 is opaque and 0 is fully transparent.
# This will only work if supported by the OS (for instance, when using a compositor under X11). Note
# that it only sets the default background color's opacity. This is so that
# things like the status bar in vim, powerline prompts, etc. still look good.
# But it means that if you use a color theme with a background color in your
# editor, it will not be rendered as transparent.  Instead you should change the
# default background color in your kitty config and not use a background color
# in the editor color scheme. Or use the escape codes to set the terminals
# default colors in a shell script to launch your editor.
# Be aware that using a value less than 1.0 is a (possibly significant) performance hit.
# background_opacity 1


# OS specific tweaks {{{

# Hide the kitty window's title bar on macOS.
# macos_hide_titlebar no

# Use the option key as an alt key. With this set to no, kitty will use
# the macOS native Option+Key = unicode character behavior. This will
# break any Alt+key keyboard shortcuts in your terminal programs, but you
# can use the macOS unicode input technique.
# macos_option_as_alt yes
# }}}
